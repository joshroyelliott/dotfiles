# ============================================================================
#                           _
#                         _| |_ _ __ ___     ___  __
#                        |_   _| '_ ' _ \   | . \/ /
#                          | | | | | | | |  | |\ \/
#                          | |_| | | | | |_/  |/\ \
#                          |_____| |_|  \___/_|_/\_\
#
# ============================================================================
# GENERAL SETTINGS {{{
# ============================================================================

set -g default-terminal "screen-256color"      # Set for 256 color
set -g history-limit 100000
set -g mouse on                                # start with mouse mode enabled
bind C-b send-prefix
unbind r                                       # Enable refresh with r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# }}}
# ============================================================================
# PLUGINS {{{
# ============================================================================

# Theme
set -g @plugin 'dracula/tmux'
    set -g @dracula-plugins "git time"
    set -g @dracula-git-colors "gray white"
    set -g @dracula-time-colors "light_purple dark_gray"
    set -g @dracula-show-left-icon session
    set -g @dracula-border-contrast true
    # TIME OPTIONS
    set -g @dracula-show-timezone false
    set -g @dracula-day-month true
    set -g @dracula-military-time true
    # GIT OPTIONS
    set -g @dracula-git-disable-status false

# set -g @plugin 'arcticicestudio/nord-tmux'
#     set -g @nord_tmux_no_patched_font "1"

# tmux-plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
    set -g @resurrect-strategy-vim 'session'
    set -g @resurrect-strategy-nvim 'session'
set -g @plugin 'tmux-plugins/tmux-continuum'
    set -g @continuum-restore 'on'
    set -g @continuum-boot 'on'
    set -g @continuum-boot-options 'alacritty,fullscreen'

# }}}
# ============================================================================
# DISPLAY {{{
# ============================================================================

set -g base-index 1             # start windows numbering at 1
setw -g pane-base-index 1       # make pane numbering consistent with windows
setw -g automatic-rename on     # rename window to reflect current program
set -g renumber-windows on      # renumber windows when a window is closed
set -g set-titles on            # set terminal title
set -g display-panes-time 1000  # slightly longer pane indicators display time
set -g display-time 1000        # slightly longer status messages display time

# }}}
# ============================================================================
# NAVIGATION {{{
# ============================================================================

bind C-c new-session            # create session
bind BTab switch-client -l      # move to last session

bind - split-window -v          # split current window horizontally
bind | split-window -h          # split current window vertically

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# Added fzf check to use jk navigation
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# Capital HJKL allows jk navigation in YCM
bind-key -n 'C-H' if-shell "$is_vim" 'send-keys C-H' 'select-pane -L'
bind-key -n 'C-J' if-shell "($is_vim || $is_fzf)" 'send-keys C-J' \ 'select-pane -D'
bind-key -n 'C-K' if-shell "($is_vim || $is_fzf)" 'send-keys C-K' \ 'select-pane -U'
bind-key -n 'C-L' if-shell "($is_vim || $is_fzf)" 'send-keys C-L' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
"bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
"bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-H' select-pane -L
bind-key -T copy-mode-vi 'C-J' select-pane -D
bind-key -T copy-mode-vi 'C-K' select-pane -U
bind-key -T copy-mode-vi 'C-L' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# restore shell keys
bind C-l send-keys 'C-l'
bind C-k send-keys 'C-k'

# pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# window navigation
unbind n
unbind p
bind -n C-M-h previous-window   # select previous window
bind -n C-M-l  next-window      # select next window

# n and w mapped to rename and new window
unbind n                        # Default Key: Move to next window
unbind w                        # Default Key: change current window
bind n command-prompt "rename-window '%%'"
bind w new-window -c "#{pane_current_path}"

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -Tcopy-mode-vi 'C-v' send -X begin-selection
bind-key -Tcopy-mode-vi 'C-y' send -X copy-selection

# }}}
# ============================================================================
# HOOKS {{{
# ============================================================================

# Track session with Timewarrior
if-shell 'command -v timew > /dev/null 2>&1' {
    start_tracking='$(echo #S | tr _ . | xargs timew start)'
    set-hook -g client-attached 'run-shell $start_tracking; \
        display-message "Tracking #S"'
    set-hook -g client-detached 'run-shell "timew stop"'
    set-hook -g client-session-changed 'run-shell $start_tracking; \
        display-message "Tracking #S"'
    set-hook -g session-renamed 'run-shell $start_tracking; \
        display-message "Tracking #S"'
}

# }}}
# ============================================================================

run -b '~/.tmux/plugins/tpm/tpm'
